name: service-worker

on:
  push:
    branches: [ develop, production ]
    paths:
      - .github/workflows/service-worker.yml
      - 'nodejs/lib/**/*'
      - 'nodejs/service-worker/**/*'
  pull_request:
    branches: [ develop, production ]
    types:
      - opened
      - synchronize
    paths:
      - .github/workflows/service-worker.yml
      - 'nodejs/lib/**/*'
      - 'nodejs/service-worker/**/*'
  workflow_dispatch:
env:
  DOCKER_REGISTRY: ghcr.io
jobs:
  node-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nodejs/service-worker
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Node Install
        uses: actions/setup-node@v4
        with:
          node-version-file: "nodejs/service-worker/.nvmrc"
          cache: 'npm'
          cache-dependency-path: |
            nodejs/lib/useapi-lib/package-lock.json
      - name: Npm Install
        run: npm ci --if-present
      - name: Npm test
        run: npm run test
      - name: Npm Build
        run: npm run build-full
      - name: Upload Artifact
        if: github.event_name == 'push' && github.ref_name == 'production'
        uses: actions/upload-artifact@v4
        with:
          name: service-worker
          if-no-files-found: error
          retention-days: 7
          path: |
            nodejs/lib/useapi-lib/package*.json
            nodejs/lib/useapi-lib/dist
            nodejs/service-worker/package*.json
            nodejs/service-worker/dist
            nodejs/service-worker/.nvmrc
            nodejs/service-worker/Dockerfile
            nodejs/service-worker/entrypoint.sh

  docker-build-push:
    if: github.event_name == 'push' && github.ref_name == 'production'
    runs-on: ubuntu-latest
    needs: node-build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: service-worker
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ${{env.DOCKER_REGISTRY}}
          username: ${{github.repository_owner}}
          password: ${{secrets.GHCR_WRITE_TOKEN}}
      - name: Docker Build and Push
        uses: docker/build-push-action@v5
        with:
          file: ./service-worker/Dockerfile
          context: .
          push: true
          tags: >
            ${{env.DOCKER_REGISTRY}}/${{github.repository}}/service-worker:${{github.sha}},
            ${{env.DOCKER_REGISTRY}}/${{github.repository}}/service-worker:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-service:
    if: github.event_name == 'push' && github.ref_name == 'production'
    runs-on: [self-hosted, service-real]
    needs: docker-build-push
    env:
      DOCKER_CONTAINER_NAME: ejegong-creator-ai-service-worker
      DOCKER_IMAGE: ${{github.repository}}/service-worker:latest
    steps:
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ${{env.DOCKER_REGISTRY}}
          username: ${{github.repository_owner}}
          password: ${{secrets.GHCR_READ_TOKEN}}
      - name: Service Stop
        run: docker stop ${DOCKER_CONTAINER_NAME} || true
      - name: Docker Image Remove
        run: docker rmi $(docker images ${DOCKER_REGISTRY}/${DOCKER_IMAGE} -q) || true
      - name: Docker Image Pull
        run: docker pull ${DOCKER_REGISTRY}/${DOCKER_IMAGE}
      - name: Service Config export
        run: |
          echo "CONFIG__AIRTABLE__TOKEN=${{secrets.AIRTABLE_TOKEN}}" > .env
          echo "CONFIG__AIRTABLE__TABLES__CONFIG=${{secrets.AIRTABLE_TABLES_CONFIG}}" >> .env
      - name: Service Run
        run: |
          docker run -d --name ${DOCKER_CONTAINER_NAME} \
            --env-file .env \
            --dns 8.8.8.8 \
            --rm \
            ${DOCKER_REGISTRY}/${DOCKER_IMAGE}
          docker ps -f "name=${DOCKER_CONTAINER_NAME}"
      - name: Service Logs
        run: docker logs --tail 10 ${DOCKER_CONTAINER_NAME}